---
import linkLogo from "../assets/link.svg";
---

<div id="projects" class="flex flex-col justify-center p-8">
    <h2 class="text-4xl font-bold text-ctp-mauve pb-4">Projects</h2>
    <ul class="flex flex-col gap-10">
        <li>
            <div
                class="flex flex-col gap-4 border-ctp-maroon border-4 border-solid p-2"
            >
                <div class="flex flex-col md:flex-row md:items-center md:gap-5">
                    <h3 class="text-2xl font-semibold text-ctp-sapphire">
                        PokéZoo
                    </h3>
                    <div class="flex gap-5">
                        <div
                            class="border-2 border-solid p-1 border-ctp-overlay2 text-ctp-mauve font-medium"
                        >
                            <a
                                href="https://github.com/jdplumst/pokezoo"
                                class="flex items-center gap-1"
                            >
                                <span>GitHub</span><img
                                    src={linkLogo.src}
                                    alt="PokéZoo GitHub"
                                />
                            </a>
                        </div>
                        <div
                            class="border-2 border-solid p-1 border-ctp-overlay2 text-ctp-mauve font-medium"
                        >
                            <a
                                href="https://pokezoo.vercel.app"
                                class="flex items-center gap-1"
                                ><span>Live</span><img
                                    src={linkLogo.src}
                                    alt="PokéZoo"
                                />
                            </a>
                        </div>
                    </div>
                </div>
                <div class="text-xl">
                    Built a full-stack web application where users collect
                    Pokémon to obtain points that they can use to increase their
                    collection. This application was built using React, Next.js
                    and TypeScript. Data is stored in a PostgreSQL database.
                </div>
                <div class="text-xl">
                    The backend API was built in Next.js using tRPC for
                    end-to-end type safety. Drizzle ORM was used to interact
                    with the database. Upstash and redis were used to ratelimit
                    users. The end-to-end testing suite was built using
                    Playwright.
                </div>
                <div class="text-xl">
                    Authentication was implemented using Auth.js using the
                    GitHub, Google and Twitch auth providers. Cron jobs were
                    used to give players their daily points using GitHub
                    Actions.
                </div>
            </div>
        </li>
        <li>
            <div
                class="flex flex-col gap-4 border-ctp-maroon border-4 border-solid p-2"
            >
                <div class="flex flex-col md:flex-row md:items-center md:gap-5">
                    <h3 class="text-2xl font-semibold text-ctp-sapphire">
                        Flashcards Terminal User Interface Application
                    </h3>
                    <div class="flex gap-5">
                        <div
                            class="border-2 border-solid p-1 border-ctp-overlay2 text-ctp-mauve font-medium"
                        >
                            <a
                                href="https://github.com/jdplumst/flashcards-tui"
                                class="flex items-center gap-1"
                            >
                                <span>GitHub</span><img
                                    src={linkLogo.src}
                                    alt="Flashcards GitHub"
                                />
                            </a>
                        </div>
                    </div>
                </div>
                <div class="text-xl">
                    Built a terminal user interface application that allows
                    users to create and review flashcards. This application
                    stores each flashcard as a key-value pair in a local SQLite
                    database.
                </div>
                <div class="text-xl">
                    The application was built using Go and the Bubble Tea
                    framework. The database is accessed using sqlx.
                </div>
            </div>
        </li>
        <li>
            <div
                class="flex flex-col gap-4 border-ctp-maroon border-4 border-solid p-2"
            >
                <div class="flex flex-col md:flex-row md:items-center md:gap-5">
                    <h3 class="text-2xl font-semibold text-ctp-sapphire">
                        Budget App
                    </h3>
                    <div class="flex gap-5">
                        <div
                            class="border-2 border-solid p-1 border-ctp-overlay2 text-ctp-mauve font-medium"
                        >
                            <a
                                href="https://github.com/jdplumst/budget-app"
                                class="flex items-center gap-1"
                            >
                                <span>GitHub F</span><img
                                    src={linkLogo.src}
                                    alt="Budget App GitHub Frontend"
                                />
                            </a>
                        </div>
                        <div
                            class="border-2 border-solid p-1 border-ctp-overlay2 text-ctp-mauve font-medium"
                        >
                            <a
                                href="https://github.com/jdplumst/budget-app-server"
                                class="flex items-center gap-1"
                            >
                                <span>GitHub B</span><img
                                    src={linkLogo.src}
                                    alt="Budget App GitHub Backend"
                                />
                            </a>
                        </div>
                        <div
                            class="border-2 border-solid p-1 border-ctp-overlay2 text-ctp-mauve font-medium"
                        >
                            <a
                                href="https://budget-app-coral.vercel.app/"
                                class="flex items-center gap-1"
                                ><span>Live</span><img
                                    src={linkLogo.src}
                                    alt="Budget App"
                                />
                            </a>
                        </div>
                    </div>
                </div>
                <div class="text-xl">
                    Built a full-stack web application where users can track and
                    calculate their budgets and expenses. Users can create
                    multiplep projects, each with their own budgets and
                    expenses.
                </div>
                <div class="text-xl">
                    This application was built using React, Next.js and
                    TypeScript on the frontend and C# and ASP.NET on the
                    backend. Data is stored in a PostgreSQL database.
                </div>
                <div class="text-xl">
                    The backend RESTful API was built in ASP.NET using Entity
                    Framework Core to interact with the database. Chart.js was
                    used to create and display graphs. The end-to-end testing
                    suite was built using Cypress.
                </div>
            </div>
        </li>
        <li>
            <div
                class="flex flex-col gap-4 border-ctp-maroon border-4 border-solid p-2"
            >
                <div class="flex flex-col md:flex-row md:items-center md:gap-5">
                    <h3 class="text-2xl font-semibold text-ctp-sapphire">
                        Best Animal Crossing: New Horizons Villager
                    </h3>
                    <div class="flex gap-5">
                        <div
                            class="border-2 border-solid p-1 border-ctp-overlay2 text-ctp-mauve font-medium"
                        >
                            <a
                                href="https://github.com/jdplumst/best-acnh-villager"
                                class="flex items-center gap-1"
                            >
                                <span>GitHub</span><img
                                    src={linkLogo.src}
                                    alt="Best ACNH Villager GitHub"
                                />
                            </a>
                        </div>
                        <div
                            class="border-2 border-solid p-1 border-ctp-overlay2 text-ctp-mauve font-medium"
                        >
                            <a
                                href="https://bestacnhvillager.vercel.app/"
                                class="flex items-center gap-1"
                                ><span>Live</span><img
                                    src={linkLogo.src}
                                    alt="Best ACNH Villager"
                                />
                            </a>
                        </div>
                    </div>
                </div>
                <div class="text-xl">
                    Built a full-stack web application where users can vote for
                    their favorite Animal Crossing: New Horizons villager in 1v1
                    matchups. Users can view the current ranking voted by all
                    the users and can look up all the villagers. Matchup results
                    are scored using the Elo rating system.
                </div>
                <div class="text-xl">
                    This application was built using React, Next.js and
                    TypeScript. This applcation uses the app router in Next.js.
                    Data is stored in a PostgreSQL database.
                </div>
                <div class="text-xl">
                    The application uses a tRPC API and Drizzle ORM to interact
                    with the database. The pages were styled using Tailwind CSS.
                </div>
            </div>
        </li>
    </ul>
</div>
